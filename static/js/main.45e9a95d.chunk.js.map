{"version":3,"sources":["logo.svg","screens/Home/HomeScreen.js","utils/FormEvents.js","utils/Router.js","screens/Auth/LoginScreen.js","screens/Auth/RegisterScreen.js","screens/Auth/RecoverScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomeScreen","mappingRoutes","item","key","react_default","a","createElement","ListGroup","Item","action","href","path","name","toUpperCase","links","this","className","as","active","Component","inputParsers","date","input","_input$split","split","_input$split2","Object","slicedToArray","month","day","year","concat","uppercase","number","parseFloat","createFormData","form","data","FormData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","Symbol","iterator","next","done","value","parserName","elements","dataset","parse","parsedValue","parser","get","set","err","return","Router","home","component","exact","login","state","isEnable","handleShowPassword","evt","_this","setState","preventDefault","target","values","console","log","_this2","Row","Col","Form","onSubmit","handleSubmit","Group","controlId","Label","Control","type","placeholder","Text","Button","onClick","e","Check","label","variant","register","recover","callback","map","index","App","react_router","process","routes","src","logo","alt","rel","react_router_dom","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45e9a95d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n//\nimport {\n\tListGroup\n} from 'react-bootstrap';\n\nimport {mappingRoutes} from '../../utils/Router';\n\nclass HomeScreen extends Component {\n\n\tmappingRoutes() {\n\n\t\treturn mappingRoutes((item, key) => {\n\t\t\treturn (<ListGroup.Item key={key} action href={item.path}>\n\t\t\t\t{item.name.toUpperCase()}\n\t\t\t</ListGroup.Item>)\n\t\t});\n\t}\n\n\trender() {\n\n\t\tconst links = this.mappingRoutes();\n\n\t\treturn (\n\t\t\t<div className=\"Home\">\n\t\t\t<h1>Home Page</h1>\n\n\t\t\t<ListGroup>\n\t\t\t\t<ListGroup.Item as=\"li\" active>\n\t\t\t    Auth Pages\n\t\t\t  </ListGroup.Item>\n\t\t\t\t{links}\n\t\t\t</ListGroup>;\n\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default HomeScreen;\n","const inputParsers = {\n  date(input) {\n    const [month, day, year] = input.split('/');\n    return `${year}-${month}-${day}`;\n  },\n  uppercase(input) {\n    return input.toUpperCase();\n  },\n  number(input) {\n    return parseFloat(input);\n  },\n};\n\nexport const createFormData = (form) => {\n\n\tconst data = new FormData(form);\n\n\tfor (let name of data.keys()) {\n\n\t\tconst input = form.elements[name];\n\t\tconst parserName = input.dataset.parse;\n\n\t\tif (parserName) {\n\t\n\t\t\tconst parser = inputParsers[parserName];\n\t\t\tconst parsedValue = parser(data.get(name));\n\t\n\t\t\tdata.set(name, parsedValue);\n\t\t}\n\t}\n\n\treturn data;\n};","import HomeScreen from '../screens/Home/HomeScreen';\nimport LoginScreen from '../screens/Auth/LoginScreen';\nimport RegisterScreen from '../screens/Auth/RegisterScreen';\nimport RecoverScreen from '../screens/Auth/RecoverScreen';\n\nconst Router = {\n\thome: {\n\t\tname: 'home',\n\t\tcomponent: HomeScreen,\n\t\tpath: '/',\n\t\texact: true\n\t},\n\tlogin: {\n\t\tname: 'login',\n\t\tcomponent: LoginScreen,\n\t\tpath: '/auth/login'\n\t},\n\tregister: {\n\t\tname: 'register',\n\t\tcomponent: RegisterScreen,\n\t\tpath: '/auth/register'\n\t},\n\trecover: {\n\t\tname: 'recover',\n\t\tcomponent: RecoverScreen,\n\t\tpath: '/auth/login'\n\t}\n};\n\nexport const getBaseRoute = () => process.env.PUBLIC_URL;\n\nexport const getNames = () => Object.keys(Router);\n\nexport const mappingRoutes = (callback) => getNames().map((index, key) => callback(Router[index], key));\n\nexport const getItems = () => mappingRoutes(item => item);","import React, { Component } from 'react';\n\nimport {\n\tRow,\n\tCol,\n\tForm,\n\tButton\t\n} from 'react-bootstrap';\n\nimport { createFormData } from '../../utils/FormEvents';\n\nclass LoginScreen extends Component {\n\n\tstate = {\n\t\tisEnable: false\n\t};\n\n\thandleSubmit(evt) {\n\t\tevt.preventDefault();\n\t\tconst form = evt.target;\n\t\tconst data = createFormData(form);\n\n\t\t/*\n\t\tfetch('/api/form-submit-url', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: data\n\t\t});\n\t\t*/\n\t\tfor (var value of data.values()) {\n\t\t   console.log(value); \n\t\t}\n\t}\n\n\thandleShowPassword = (isEnable, evt) => {\n\n\t\tthis.setState({isEnable: !isEnable});\n\t}\n\n\trender() {\n\n\t\tconst {isEnable} = this.state;\n\n\t\treturn (\n\t\t\t<Row className=\"Login\">\n\t\t\t\t<Col>\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t  \t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t    \t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t    <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"login-email\"/>\n\t\t\t\t    <Form.Text className=\"text-muted\">\n\t\t\t\t      We'll never share your email with anyone else.\n\t\t\t\t    </Form.Text>\n\t  \t\t\t</Form.Group>\n\n\t\t\t  <Form.Group controlId=\"formBasicPassword\">\n\t\t\t    <Form.Label>Password</Form.Label>\n\t\t\t    <Form.Control type={isEnable ? 'text' : 'password'} placeholder=\"Password\" name=\"login-password\"/>\n\t\t\t    <Button type=\"button\" onClick={e => this.handleShowPassword(isEnable, e)}>Show Password</Button>\n\t\t\t  </Form.Group>\n\t\t\t  <Form.Group controlId=\"formBasicChecbox\">\n\t\t\t    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n\t\t\t  </Form.Group>\n\t\t\t  <Button variant=\"primary\" type=\"submit\">\n\t\t\t    Submit\n\t\t\t  </Button>\n\t\t\t\t</Form>;\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t);\n\t}\n}\n\nexport default LoginScreen;","import React, { Component } from 'react';\n\nimport {\n\tRow,\n\tCol,\n\tForm,\n\tButton\t\n} from 'react-bootstrap';\n\nimport { createFormData } from '../../utils/FormEvents';\n\nclass RegisterScreen extends Component {\n\n\thandleSubmit(evt) {\n\t\tevt.preventDefault();\n\n\t\tconst data = createFormData(evt.target);\n\n\t\tfor (var value of data.values()) {\n\t\t   console.log(value); \n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Row className=\"Register\">\n\t\t\t<Col>\n\n\t\t\t<Form onSubmit={this.handleSubmit}>\n\n\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t    \t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t    <Form.Control type=\"text\" placeholder=\"Enter full name\" name=\"register-name\"/>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t    \t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t    <Form.Control type=\"text\" placeholder=\"Enter email\" name=\"register-email\"/>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t    \t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t    <Form.Control type=\"password\" name=\"register-password\"/>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button variant=\"primary\" type=\"submit\">Send</Button>\n\t\t\t</Form>\n\t\t\t\t</Col>\n\t\t\t\n\t\t\t</Row>\n\t\t\t);\n\t}\n}\n\nexport default RegisterScreen;","import React, { Component } from 'react';\n\nimport {\n\tRow,\n\tCol,\n\tForm,\n\tButton\t\n} from 'react-bootstrap';\n\nimport { createFormData } from '../../utils/FormEvents';\n\nclass RecoverScreen extends Component {\n\n\thandleSubmit(evt) {\n\n\t\tevt.preventDefault();\n\n\t\tconst data = createFormData(evt.target);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Row className=\"Recover\">\n\t\t\t<Col>\n\n\t\t\t<Form onSubmit={this.handleSubmit}>\n\n\t\t\t<Form.Group>\n\t\t\t<Form.Label>Username / Email</Form.Label>\n\t\t\t<Form.Control type=\"text\" name=\"recover-username\"/>\n\t\t\t</Form.Group>\n\n\t\t\t<Button variant=\"primary\" type=\"submit\">Send</Button>\n\t\t\t</Form>\n\n\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t);\n\t}\n}\n\nexport default RecoverScreen;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport {\n  mappingRoutes,\n  getBaseRoute\n} from './utils/Router';\n\nclass App extends Component {\n\n\n  mappingRoutes() {\n    \n    return mappingRoutes((item, key) => {\n      return <Route key={key} path={getBaseRoute() + item.path} exact={!!item.exact} component={item.component} />\n    });\n  }\n\n  render() {\n\n    const routes = this.mappingRoutes();\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n          <a href=\"/\">Go to Home</a>\n        </header>\n      <BrowserRouter>\n        <Switch>\n        {routes}\n        </Switch>\n      </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}